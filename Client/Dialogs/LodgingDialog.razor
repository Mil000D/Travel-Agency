<EditForm Model="LodgingBookingDTO" OnValidSubmit="Save">
<DataAnnotationsValidator />
    <MudDialog>
        <DialogContent>
            <MudSelect For="@(() => LodgingBookingDTO.Lodging)" T="LodgingDTO" @bind-Value="@LodgingBookingDTO.Lodging" ToStringFunc="@converter" Label="Select Lodging" OpenIcon="@Icons.Material.Filled.AirportShuttle" AdornmentColor="Color.Secondary" Required="true">
                @foreach (LodgingDTO item in lodgings)
                {
                    <MudSelectItem Value="@item">@item.Name</MudSelectItem>
                }
            </MudSelect>
            <MudTextField For="@(() => LodgingBookingDTO.RoomType)" @bind-Value="LodgingBookingDTO.RoomType" Label="Room Type" Required="true" />
            <MudTextField For="@(() => LodgingBookingDTO.MaxCapacity)" @bind-Value="LodgingBookingDTO.MaxCapacity" Label="Max Capacity" InputType="InputType.Number" Required="true" />
            <MudTextField For="@(() => LodgingBookingDTO.Price)" @bind-Value="LodgingBookingDTO.Price" Label="Price" Required="true" />
            <MudTextField For="@(() => LodgingBookingDTO.CheckInDate)" T="DateTime?" Format="yyyy-MM-dd" @bind-Value="LodgingBookingDTO.CheckInDate" Label="Check-In Date" InputType="InputType.Date" Required="true" />
            <MudTextField For="@(() => LodgingBookingDTO.CheckOutDate)" T="DateTime?" Format="yyyy-MM-dd" @bind-Value="LodgingBookingDTO.CheckOutDate" Label="Check-Out Date" InputType="InputType.Date" Required="true" />
        </DialogContent>
        <DialogActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Save</MudButton>
            <MudButton Variant="Variant.Outlined" OnClick="Cancel">Cancel</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>
@code {
    private List<LodgingDTO> lodgings = new List<LodgingDTO>()
    {
        new LodgingDTO { Id = 1, Name = "Hotel" },
        new LodgingDTO { Id = 2, Name = "Hostel" },
        new LodgingDTO { Id = 3, Name = "Motel" },
    };
    Func<LodgingDTO, string> converter = p => p?.Name;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public LodgingBookingDTO LodgingBookingDTO { get; set; } = new LodgingBookingDTO();

    private void Save()
    {
        MudDialog.Close(DialogResult.Ok(LodgingBookingDTO));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
